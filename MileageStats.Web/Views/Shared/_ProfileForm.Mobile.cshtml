@model MileageStats.Domain.Models.User
           
@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.UserId)
@Html.HiddenFor(model => model.AuthorizationId)

<ul>
    <li>
        @Html.LabelFor(model => model.DisplayName)
        @Html.MTextBoxFor(model => model.DisplayName, new { maxlength = "15", placeholder="your name" })
        @Html.ValidationMessageFor(model => model.DisplayName)
    </li>
    <li>
        @Html.LabelFor(model => model.Country)
        @Html.MDropDownListFor(model => model.Country, ViewBag.CountryList as SelectList, "-- Select country --", new { @class = "editor-textbox" })
        @Html.ValidationMessageFor(model => model.Country)
    </li>
</ul>

<ol class="hbox button-group">
    <li>
        <button type="submit">
            <span>Save</span></button></li>
    <li class="icon false invert">
        <button type="submit" value="cancel" name="action">
            <span>No thanks, I'll do it later</span></button></li>
</ol>

@Html.ValidationSummary(true)

@*@if (Request.Browser.IsWow() & string.IsNullOrEmpty(Model.Country))
    {
        <script type="text/javascript">
            var selectedCountry = $('#Country').val();
            
            if (selectedCountry == '' && navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {

                    //Get country name from GeoLocationController
                    var getCountryActionUrl = '@Url.Action("GetCountry", "GeoLocation")?latitude=' + position.coords.latitude + "&longitude=" + position.coords.longitude;

                    $.getJSON(getCountryActionUrl, function (data) {
                        $('#Country').val(data);
                    });
                });

            }
        </script>
    }*@