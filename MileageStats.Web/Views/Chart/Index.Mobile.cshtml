@using System.Text
@model MileageStats.Web.Models.ChartFormModel
@{
    ViewBag.Title = "Charts";
    Layout = "~/Views/Shared/_Layout.Mobile.cshtml";

    var vehicleIdQueryStringBuilder = new StringBuilder();
    if (!Html.IsRenderingForMustache())
    {
        foreach (int vehicleId in Model.VehicleIds)
        {
            vehicleIdQueryStringBuilder.AppendFormat("&VehicleIds={0}", vehicleId);
        }
    }
}

<nav>
    <ol class="tabs">
        <li><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
        <li><a href="@Url.Action("Index", "Chart")" class="selected">Charts</a></li>
    </ol>
</nav>
@{ Html.RenderPartial("_Flash.Mobile"); }
@using (var section = Mustache.Section("Model"))
{
    
    <div class="view">

        @using (Html.BeginForm("Index", "Chart"))
        {
            <ul>
                <li>
                    <h4>Chart Data</h4>
                    @if (Html.IsRenderingForMustache())
                    {
                        <input type="hidden" id="GetChartImageUrl" value="@Url.UnencodedAction("GetChartImage", "Chart", new { UserId = Mustache.Value(m=>m.UserId)})" />
                        
                        <select id="ChartName" name="ChartName">
                            @Html.Raw("{{#AllCharts}}");
                            <option value="@Html.Raw("{{Value}}")">@Html.Raw("{{Text}}")</option>
                            @Html.Raw("{{/AllCharts}}");
                        </select>
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.ChartName, Model.AllCharts);
                    }             
                                                                             
                </li>
                @if (Html.IsRenderingForMustache())
                {
                    <li><img id="chartimage" /></li>
                }
                else
                {
                    <li><img src="@Url.Action("GetChartImage", new { UserId = Model.UserId, ChartName = Model.ChartName, StartDate = Model.StartDate, EndDate = Model.EndDate })@vehicleIdQueryStringBuilder.ToString()" title="@Model.ChartName" alt="@Model.ChartName" /></li>
                }
  
                <li>
                    <h4>Vehicles</h4>
                    <ol class="legend">
                        @foreach (var vehicle in Mustache.Loop(m => m.AllVehicleModels))
                        {
                            if (Html.IsRenderingForMustache())
                            {
                                <li><input name="VehicleIds" type="checkbox" value="@Html.Raw("{{VehicleId}}")">@Html.Raw("{{Name}}")</input></li>
                            }
                            else
                            {
                                <li><input name="VehicleIds" type="checkbox" value="@vehicle.VehicleId" @(Model.VehicleIds.Contains(vehicle.VehicleId) ? "checked" : "")>@vehicle.Name</input></li>
                            }

                        }
                    </ol>
                </li>
                <li class="range">
                    <h4>Date Range</h4>
                    @if (Html.IsRenderingForMustache())
                    {
                        <label for="StartDate">From</label> 
                        <select name="StartDate">
                            @Html.Raw("{{#PriorMonthStartYears}}");
                            <option value="@Html.Raw("{{Value}}")">@Html.Raw("{{Text}}")</option>
                            @Html.Raw("{{/PriorMonthStartYears}}");
                        </select>
                    
                        <label for="EndDate">To</label>
                        <select name="EndDate">
                            @Html.Raw("{{#PriorMonthEndYears}}");
                            <option value="@Html.Raw("{{Value}}")">@Html.Raw("{{Text}}")</option>
                            @Html.Raw("{{/PriorMonthEndYears}}");
                        </select>
                    }
                    else
                    {
                        <label for="StartDate">From</label>@Mustache.DropDownListFor(model => model.StartDate, SelectListFor.PriorMonthStartYear(d => Model.StartDate == d))
                        <label for="EndDate">To</label>@Mustache.DropDownListFor(model => model.EndDate, SelectListFor.PriorMonthEndYear(d => Model.EndDate == d))                    
                    }
                </li>
            </ul>

            <ol class="button-group">
                <li class="icon refresh">
                    <button id="ChartRefreshButton" type="submit"><span>Refresh</span></button>     
                </li>
            </ol>
        }
    
    </div>
}
